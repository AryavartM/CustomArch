#!/usr/bin/env bash

# al-compositor: an Openbox Pipe Menu for use with picom compositor
# Copyright (C) 2012 Philip Newborough <corenominal@corenominal.org>
# Copyright (C) 2013 Aleks-Daniel Jakimenko
# Copyright (C) 2015 John Crawley <john@bunsenlabs.org>

readonly EXECXCOMP='picom -b'
readonly RESTART_ATTEMPTS=20
readonly HELP='
al-compositor an openbox pipe menu for use with picom
It should normally be called from an openbox menu.

Options (passed from the menu):
    -h --help   show this message
    --start     start the compositor and restart tint2, if running
    --restart   restart the compositor, if running
    --stop      stop the compositor
    --edit      open the picom config file in a text editor
    --watch     restart picom when the config is modified (useful for debugging)

If al-compositor is called with no options (the usual method),
it will output an xml openbox pipemenu for handling compositing.

See ~/.config/picom.conf and "man picom" for configuration options.'

for i in "$@"; do
    case "$i" in
        -h|--help) echo "$HELP" ; exit 0
    esac
done

if ! . "/usr/lib/archlabs/common/al-include.cfg" 2>/dev/null; then
    echo $"Error: Failed to source /usr/lib/archlabs/common/al-include.cfg" >&2 ; exit 1
fi

declareDependencies picom

forcekill_picom() {
    killall -q picom
    for ((i=0; i<RESTART_ATTEMPTS; i++)); do
        [[ $(pidof picom) ]] || break
        killall -q -S KILL picom
        sleep 0.25
    done
}


if [[ $1 = '--edit' ]]; then # Edit picom settings
    if ! [ -e "$HOME/.config/picom.conf" ]; then
        cp '/etc/skel/.config/picom.conf' "$HOME/.config/picom.conf"
    fi
    if hash exo-open &>/dev/null; then
        exo-open "$HOME/.config/picom.conf"
    else
        termite -e "$EDITOR $HOME/.config/picom.conf"
    fi
elif [[ $1 = '--start' ]]; then
    if ! [[ $(pidof picom) ]]; then
        $EXECXCOMP
    else
        echo "$0 --start: picom already running" && exit 1
    fi

elif [[ $1 = '--stop' ]]; then
    forcekill_picom

elif [[ $1 = '--restart' ]]; then
    if [[ $(pidof picom) ]]; then
        forcekill_picom
        "$0" --start
    else # nothing to restart
        echo "$0 --restart: picom is not running" && exit 1
    fi

elif [[ $1 = '--watch' ]]; then
    while inotifywait -e close_write "$HOME/.config/picom.conf"; do
        "$0" --restart
    done

else
    menuStart
    if ! [[ $(pidof picom) ]]; then
        menuItem 'Enable Compositing' "$0 --start"
    else
        menuItem 'Restart Compositing' "$0 --restart"
        menuItem 'Disable Compositing' "$0 --stop"
        menuSeparator
    fi
    if [[ -e /usr/bin/paranoid.py ]]; then
        menuItem 'picom Settings GUI' "paranoid.py"
    fi
    menuItem 'Edit picom Config' "$0 --edit"
    menuEnd
fi

exit 0
